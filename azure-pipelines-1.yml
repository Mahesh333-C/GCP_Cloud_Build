trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - '*'

stages:
  - stage: Build Maven
    jobs:
      - job: Build
        displayName: Build Maven
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean install'

  - stage: Dependency check
    jobs:
      - job: DependencyCheck
        displayName: Dependency check
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self
          - script: |
              wget https://dl.bintray.com/jeremy-long/owasp/dependency-check-6.5.0-release.zip
              unzip dependency-check-*.zip
              ./dependency-check/bin/dependency-check.sh --scan . --format HTML
            displayName: Run OWASP Dependency-Check

  - stage: Build docker image
    jobs:
      - job: BuildDockerImage
        displayName: Build docker image
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              docker build -t mahec/devops-integration .
            displayName: Build Docker Image

  - stage: Push image to Hub
    jobs:
      - job: PushImageToHub
        displayName: Push image to Hub
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              docker login -u mahec -p mahesh3@AM
              docker push mahec/demo
            displayName: Push Docker Image

  - stage: Snyk Code Scan
    jobs:
      - job: SnykCodeScan
        displayName: Snyk Code Scan
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              npx snyk test --all-licenses --token=0449b11d-9608-452e-8c8b-f6a13282af9f
            displayName: Snyk Code Scan

  - stage: SonarCloud Code Analysis
    jobs:
      - job: SonarCloudCodeAnalysis
        displayName: SonarCloud Code Analysis
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: SonarQubePrepare@4
            inputs:
              SonarQube: 'sonarcloud'
              scannerMode: 'MSBuild'

          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'sonar:sonar'
